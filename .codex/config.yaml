model: o4-mini
approvalMode: full-auto
fullAutoErrorMode: ask-user
notify: true

ignorePaths:
  - Build_docs/bib_entries/**
  - Build_docs/bib_files/**
  - Build_docs/audio_files/*.wav

prompts:
  DraftBuildDocsReadme:
    description: "Draft Build_docs/README.md explaining the Sphinx documentation build workflow"
    prompt: |
      You are an assistant that writes clear, detailed README documentation for a Sphinx-based project.
      Given the `Build_docs/` directory of the SPDEs-Bib repository, generate a `README.md` that:
      - Provides an overview of the directory layout and purpose of each folder.
      - Explains key scripts (`Bibtexparser-all.py`, `add_podcast.py`, `script.sh`), including their main functions.
      - Describes the Sphinx configuration in `conf.py`, including extensions and hooks such as `run_add_podcast`.
      - Details build commands (`make html`, `make linkcheck`, Windows `make.bat`) and dependencies.
      - Covers deployment steps (Makefile `deploy` target, GitHub Pages, Read the Docs integration).
      - Maintains clarity, readability, and proper Markdown formatting.
      Output the complete Markdown content for `Build_docs/README.md`.
  EnhanceProjectReadme:
    description: "Enhance the main README.md to present the project clearly and attractively on GitHub"
    prompt: |
      You are an assistant that writes clear, engaging README documentation for a GitHub project.
      Given the existing root `README.md` of the SPDEs-Bib repository, generate an improved version that:
      - Provides a concise project overview and key features.
      - Explains installation steps and dependencies.
      - Shows usage examples and basic commands.
      - Details guidelines for contributions and code of conduct.
      - Includes links to documentation, issues, and contact information.
      - Uses proper Markdown formatting, includes badges (e.g., build status, docs, license), and ensures readability.
      Output the complete Markdown content ready for the repository root.
